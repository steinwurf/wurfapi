{
  "f<template<class>class,class>(constH<S>&value)": {
    "access": "public",
    "briefdescription": [],
    "detaileddescription": [
      [
        {
          "content": "Template template function",
          "kind": "text"
        }
      ]
    ],
    "is_const": false,
    "is_constructor": false,
    "is_destructor": false,
    "is_explicit": false,
    "is_inline": false,
    "is_static": false,
    "is_virtual": false,
    "kind": "function",
    "location": {
      "line": 45,
      "path": "templates.hpp"
    },
    "name": "f",
    "parameters": [
      {
        "name": "value",
        "type": [
          {
            "value": "const H< S > &"
          },
          {
            "value": " value"
          }
        ]
      }
    ],
    "return": {
      "description": [],
      "type": [
        {
          "value": "void"
        }
      ]
    },
    "scope": null,
    "template_parameters": [
      {
        "description": [
          [
            {
              "content": "another something",
              "kind": "text"
            }
          ]
        ],
        "name": "H",
        "type": [
          {
            "value": "template< class > class"
          }
        ]
      },
      {
        "default": [
          {
            "link": {
              "url": false,
              "value": "our_type"
            },
            "value": "our_type"
          },
          {
            "value": "<int>"
          }
        ],
        "description": [
          [
            {
              "content": "something something...",
              "kind": "text"
            }
          ]
        ],
        "name": "S",
        "type": [
          {
            "value": "class"
          }
        ]
      }
    ],
    "trailing_return": false
  },
  "function<R(Args...)>": {
    "access": "public",
    "briefdescription": [
      [
        {
          "content": "Specilization.",
          "kind": "text"
        }
      ]
    ],
    "detaileddescription": [],
    "kind": "class",
    "location": {
      "line": 77,
      "path": "templates.hpp"
    },
    "members": [],
    "name": "function< R(Args...)>",
    "scope": null,
    "template_parameters": [
      {
        "name": "R",
        "type": [
          {
            "value": "typename"
          }
        ]
      },
      {
        "name": "Args",
        "type": [
          {
            "value": "typename..."
          }
        ]
      }
    ]
  },
  "non_type": {
    "access": "public",
    "briefdescription": [],
    "detaileddescription": [
      [
        {
          "content": "A non-type template class",
          "kind": "text"
        }
      ]
    ],
    "kind": "class",
    "location": {
      "line": 54,
      "path": "templates.hpp"
    },
    "members": [],
    "name": "non_type",
    "scope": null,
    "template_parameters": [
      {
        "name": "Value",
        "type": [
          {
            "value": "uint32_t"
          }
        ]
      }
    ]
  },
  "our_type": {
    "access": "public",
    "briefdescription": [],
    "detaileddescription": [
      [
        {
          "content": "A template class",
          "kind": "text"
        }
      ]
    ],
    "kind": "class",
    "location": {
      "line": 6,
      "path": "templates.hpp"
    },
    "members": [
      "our_type::our_type(constT&t)"
    ],
    "name": "our_type",
    "scope": null,
    "template_parameters": [
      {
        "description": [
          [
            {
              "content": "is a type",
              "kind": "text"
            }
          ]
        ],
        "name": "T",
        "type": [
          {
            "value": "class"
          }
        ]
      }
    ]
  },
  "our_type::our_type(constT&t)": {
    "access": "public",
    "briefdescription": [
      [
        {
          "content": "With constructor.",
          "kind": "text"
        }
      ]
    ],
    "detaileddescription": [],
    "is_const": false,
    "is_constructor": true,
    "is_destructor": false,
    "is_explicit": false,
    "is_inline": false,
    "is_static": false,
    "is_virtual": false,
    "kind": "function",
    "location": {
      "line": 9,
      "path": "templates.hpp"
    },
    "name": "our_type",
    "parameters": [
      {
        "name": "t",
        "type": [
          {
            "value": "const T &"
          },
          {
            "value": " t"
          }
        ]
      }
    ],
    "scope": "our_type",
    "trailing_return": false
  },
  "our_type<int>": {
    "access": "public",
    "briefdescription": [
      [
        {
          "content": "Specialization.",
          "kind": "text"
        }
      ]
    ],
    "detaileddescription": [],
    "kind": "class",
    "location": {
      "line": 15,
      "path": "templates.hpp"
    },
    "members": [
      "our_type<int>::our_type(constint&t)"
    ],
    "name": "our_type< int >",
    "scope": null,
    "template_parameters": []
  },
  "our_type<int>::our_type(constint&t)": {
    "access": "public",
    "briefdescription": [
      [
        {
          "content": "With int.",
          "kind": "text"
        }
      ]
    ],
    "detaileddescription": [],
    "is_const": false,
    "is_constructor": true,
    "is_destructor": false,
    "is_explicit": false,
    "is_inline": false,
    "is_static": false,
    "is_virtual": false,
    "kind": "function",
    "location": {
      "line": 18,
      "path": "templates.hpp"
    },
    "name": "our_type",
    "parameters": [
      {
        "name": "t",
        "type": [
          {
            "value": "const int &"
          },
          {
            "value": " t"
          }
        ]
      }
    ],
    "scope": "our_type<int>",
    "trailing_return": false
  },
  "templates.hpp": {
    "kind": "file",
    "name": "templates.hpp",
    "path": "templates.hpp"
  },
  "test": {
    "briefdescription": [],
    "detaileddescription": [],
    "inline": false,
    "kind": "namespace",
    "members": [
      "test::another_type"
    ],
    "name": "test",
    "scope": null
  },
  "test::another_type": {
    "access": "public",
    "briefdescription": [],
    "detaileddescription": [
      [
        {
          "content": "A template class",
          "kind": "text"
        }
      ]
    ],
    "kind": "class",
    "location": {
      "line": 28,
      "path": "templates.hpp"
    },
    "members": [
      "test::another_type::nested",
      "test::another_type::another_type(constT&t)"
    ],
    "name": "another_type",
    "scope": "test",
    "template_parameters": [
      {
        "default": [
          {
            "value": "uint32_t"
          }
        ],
        "description": [
          [
            {
              "content": "is a uint32_t",
              "kind": "text"
            }
          ]
        ],
        "name": "T",
        "type": [
          {
            "value": "class"
          }
        ]
      },
      {
        "default": [
          {
            "value": "T"
          }
        ],
        "description": [
          [
            {
              "content": "is T",
              "kind": "text"
            }
          ]
        ],
        "name": "U",
        "type": [
          {
            "value": "typename"
          }
        ]
      },
      {
        "name": "Args",
        "type": [
          {
            "value": "typename..."
          }
        ]
      }
    ]
  },
  "test::another_type::another_type(constT&t)": {
    "access": "public",
    "briefdescription": [
      [
        {
          "content": "With constructor.",
          "kind": "text"
        }
      ]
    ],
    "detaileddescription": [],
    "is_const": false,
    "is_constructor": true,
    "is_destructor": false,
    "is_explicit": false,
    "is_inline": false,
    "is_static": false,
    "is_virtual": false,
    "kind": "function",
    "location": {
      "line": 31,
      "path": "templates.hpp"
    },
    "name": "another_type",
    "parameters": [
      {
        "name": "t",
        "type": [
          {
            "value": "const T &"
          },
          {
            "value": " t"
          }
        ]
      }
    ],
    "scope": "test::another_type",
    "trailing_return": false
  },
  "test::another_type::nested": {
    "access": "public",
    "briefdescription": [
      [
        {
          "content": "Nexted class.",
          "kind": "text"
        }
      ]
    ],
    "detaileddescription": [],
    "kind": "class",
    "location": {
      "line": 36,
      "path": "templates.hpp"
    },
    "members": [
      "test::another_type::nested::print()"
    ],
    "name": "nested",
    "scope": "test::another_type",
    "template_parameters": [
      {
        "name": "T",
        "type": [
          {
            "value": "class"
          }
        ]
      }
    ]
  },
  "test::another_type::nested::print()": {
    "access": "private",
    "briefdescription": [],
    "detaileddescription": [],
    "is_const": false,
    "is_constructor": false,
    "is_destructor": false,
    "is_explicit": false,
    "is_inline": false,
    "is_static": false,
    "is_virtual": false,
    "kind": "function",
    "location": {
      "line": 37,
      "path": "templates.hpp"
    },
    "name": "print",
    "parameters": [],
    "return": {
      "description": [],
      "type": [
        {
          "value": "void"
        }
      ]
    },
    "scope": "test::another_type::nested",
    "trailing_return": false
  },
  "test<class,class>()": {
    "access": "public",
    "briefdescription": [],
    "detaileddescription": [],
    "is_const": false,
    "is_constructor": false,
    "is_destructor": false,
    "is_explicit": false,
    "is_inline": false,
    "is_static": false,
    "is_virtual": false,
    "kind": "function",
    "location": {
      "line": 72,
      "path": "templates.hpp"
    },
    "name": "test",
    "parameters": [],
    "return": {
      "description": [],
      "type": [
        {
          "value": "void"
        }
      ]
    },
    "scope": null,
    "template_parameters": [
      {
        "name": "A",
        "type": [
          {
            "value": "class"
          }
        ]
      },
      {
        "name": "B",
        "type": [
          {
            "value": "class"
          }
        ]
      }
    ],
    "trailing_return": false
  },
  "test<class>()": {
    "access": "public",
    "briefdescription": [],
    "detaileddescription": [
      [
        {
          "content": "Test overload on number of template args - unique name should be different",
          "kind": "text"
        }
      ]
    ],
    "is_const": false,
    "is_constructor": false,
    "is_destructor": false,
    "is_explicit": false,
    "is_inline": false,
    "is_static": false,
    "is_virtual": false,
    "kind": "function",
    "location": {
      "line": 69,
      "path": "templates.hpp"
    },
    "name": "test",
    "parameters": [],
    "return": {
      "description": [],
      "type": [
        {
          "value": "void"
        }
      ]
    },
    "scope": null,
    "template_parameters": [
      {
        "name": "A",
        "type": [
          {
            "value": "class"
          }
        ]
      }
    ],
    "trailing_return": false
  },
  "testtest": {
    "access": "public",
    "briefdescription": [],
    "detaileddescription": [
      [
        {
          "content": "Template template struct",
          "kind": "text"
        }
      ]
    ],
    "kind": "struct",
    "location": {
      "line": 63,
      "path": "templates.hpp"
    },
    "members": [],
    "name": "testtest",
    "scope": null,
    "template_parameters": [
      {
        "description": [
          [
            {
              "content": "another something",
              "kind": "text"
            }
          ]
        ],
        "name": "H",
        "type": [
          {
            "value": "template< class > class"
          }
        ]
      },
      {
        "default": [
          {
            "link": {
              "url": false,
              "value": "our_type"
            },
            "value": "our_type"
          },
          {
            "value": "<int>"
          }
        ],
        "description": [
          [
            {
              "content": "something something...",
              "kind": "text"
            }
          ]
        ],
        "name": "S",
        "type": [
          {
            "value": "class"
          }
        ]
      }
    ]
  }
}